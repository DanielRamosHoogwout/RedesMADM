# K---------------------------------------------------------------------
Kgamma <- K %*% solve(diag(100) - gamma*K)
Kgamma_results = data.frame()
for (i in 1:nrow(Kgamma)){
Kgamma_newsum=sum(Kgamma[i,])
Kgamma_results=rbind(Kgamma_results,Kgamma_newsum)
rm(Kgamma_newsum)
}
Kgamma_results
dimnames(data)
dimnames[[1]]
dimnames[1]
str(data)
colnames(data)
Kgamma_results <- Kgamma_results %>%
mutate(V=colnames(data), .before=X2.33333333333333)
library(tidyverse)
Kgamma_results <- Kgamma_results %>%
mutate(V=colnames(data), .before=X2.33333333333333)
View(Kgamma_results)
ncol(data)
data <- read.table("../../../Xarxes Socials i Econòmiques/Exercicis/webPageLinks.txt")
M <- data.matrix(data)
G <- graph_from_adjacency_matrix(M)
K <- t(M) %*% M
tt <- M %*% t(M)
MIdg <- max(degree(G,mode="in"))
MOdg <- max(degree(G,mode="out"))
gamma <- 1/(min(MIdg,MOdg))
# K---------------------------------------------------------------------
Kgamma <- K %*% solve(diag(ncol(100)) - gamma*K)
# K---------------------------------------------------------------------
Kgamma <- K %*% solve(diag(ncol(data)) - gamma*K)
Kgamma_results = data.frame()
for (i in 1:nrow(Kgamma)){
Kgamma_newsum=sum(Kgamma[i,])
Kgamma_results=rbind(Kgamma_results,Kgamma_newsum)
rm(Kgamma_newsum)
}
Kgamma_results <- Kgamma_results %>%
mutate(V=colnames(data), .before=X2.33333333333333)
View(Kgamma_results)
Tgamma <- tt %*% solve(diag(ncol(data)) - gamma*tt)
Tgamma_results = data.frame()
for (i in 1:nrow(Tgamma)){
Tgamma_newsum=sum(Tgamma[i,])
Tgamma_results=rbind(Tgamma_results,Tgamma_newsum)
rm(Tgamma_newsum)
}
Tgamma_results <- Tgamma_results %>%
mutate(V=c("n5","n1","n2","n6","n3","n7","n4","n8"), .before=X.6)
Tgamma_results
Tgamma <- tt %*% solve(diag(ncol(data)) - gamma*tt)
Tgamma_results = data.frame()
for (i in 1:nrow(Tgamma)){
Tgamma_newsum=sum(Tgamma[i,])
Tgamma_results=rbind(Tgamma_results,Tgamma_newsum)
rm(Tgamma_newsum)
}
Tgamma_results <- Tgamma_results %>%
mutate(V=colnames(data), .before=X0)
View(Tgamma_results)
data1 <- read_tsv(k, col_names=F,
n_max = 10000, skip=0)
library(tidyverse)
data1 <- read_tsv(k, col_names=F,
n_max = 10000, skip=0)
data1 <- read_tsv("data/combined_data_1.txt", col_names=F,
n_max = 10000, skip=0)
load"../../igraph - R/cslogs100.rda"
load("../../igraph - R/cslogs100.rda")
cslogs100 -> D
D[1]
library(igraph)
library(tidyverse)
data <- read.table("webPageLinks.txt")
data <- read.table("../proyecto-entrega-Kernel/webPageLinks.txt")
M <- data.matrix(data)
G <- graph_from_adjacency_matrix(M)
K <- t(M) %*% M
tt <- M %*% t(M)
MIdg <- max(degree(G,mode="in"))
MOdg <- max(degree(G,mode="out"))
gamma <- 1/(min(MIdg,MOdg))
# K---------------------------------------------------------------------
Kgamma <- K %*% solve(diag(ncol(data)) - gamma*K)
Kgamma_results = data.frame()
for (i in 1:nrow(Kgamma)){
Kgamma_newsum=sum(Kgamma[i,])
Kgamma_results=rbind(Kgamma_results,Kgamma_newsum)
rm(Kgamma_newsum)
}
Kgamma_results <- Kgamma_results %>%
mutate(V=colnames(data), .before=X2.33333333333333)
View(Kgamma_results)
Tgamma_results <- Tgamma_results %>%
mutate(V=colnames(data), .before=X0)
View(Tgamma_results)
Kgamma_results$V=1:100
View(Kgamma_results)
Tgamma <- tt %*% solve(diag(ncol(data)) - gamma*tt)
Tgamma_results = data.frame()
for (i in 1:nrow(Tgamma)){
Tgamma_newsum=sum(Tgamma[i,])
Tgamma_results=rbind(Tgamma_results,Tgamma_newsum)
rm(Tgamma_newsum)
}
Tgamma_results <- Tgamma_results %>%
mutate(V=colnames(data), .before=X0)
Tgamma_results$V=1:100
View(Tgamma_results)
authority.score(K)$vector
authority.score(G)$vector
View(authority.score(G)$vector)
View(authority.score(G)$vector)
data <- read.table("../proyecto-entrega-Kernel/webPageLinks.txt")
M <- data.matrix(data)
G <- graph_from_adjacency_matrix(M)
K <- t(M) %*% M
tt <- M %*% t(M)
MIdg <- max(degree(G,mode="in"))
MOdg <- max(degree(G,mode="out"))
gamma <- 1/(min(MIdg,MOdg))
# K---------------------------------------------------------------------
Kgamma <- K %*% solve(diag(ncol(data)) - gamma*K)
Kgamma_results = data.frame()
for (i in 1:nrow(Kgamma)){
Kgamma_newsum=sum(Kgamma[i,])
Kgamma_results=rbind(Kgamma_results,Kgamma_newsum)
rm(Kgamma_newsum)
}
Kgamma_results <- Kgamma_results %>%
mutate(V=colnames(data), .before=X2.33333333333333)
View(Kgamma_results)
Tgamma <- tt %*% solve(diag(ncol(data)) - gamma*tt)
Tgamma_results = data.frame()
for (i in 1:nrow(Tgamma)){
Tgamma_newsum=sum(Tgamma[i,])
Tgamma_results=rbind(Tgamma_results,Tgamma_newsum)
rm(Tgamma_newsum)
}
Tgamma_results <- Tgamma_results %>%
mutate(V=colnames(data), .before=X0)
View(Tgamma_results)
Kgamma_results
str(Kgamma_results)
str(authority.score(G)$vector)
nrow(authority.score(G)$vector)
auth <- as.data.frame(authority.score(G)$vector)
auth
View(auth)
auth <- auth %>% mutate(V=colnames(data), .before=`authority.score(G)$vector`)
auth
View(auth)
auth_k <- inner_join(Kgamma_results,auth)
auth_k
View(auth_k)
View(auth_k)
newgamma <- 0
knitr::opts_chunk$set(echo = TRUE)
library(igraph)
NK(data,0.07)
NK <- function(A, gamma) {
G <- graph_from_adjacency_matrix(A)
# Calculamos el máximo grado de difusión posible
MIdg <- max(degree(G,mode="in"))
MOdg <- max(degree(G,mode="out"))
max_gamma <- 1/(min(MIdg,MOdg))
# Comprobamos que gamma no es excesivamente elevado
if(gamma > max_gamma) {
return(paste("Grado de difusión demasiado alto. El valor debe estar entre 0 y",
round(max_gamma,3)))
}
K_ <- t(A) %*% A
T_ <- A %*% t(A)
output = list()
output$K_g <- K_ %*% solve(diag(nrow(A)) - gamma*K_)
output$T_g <- T_ %*% solve(diag(nrow(A)) - gamma*T_)
return(output)
}
NK(data,0.07)
data <- as.matrix(read.table("webPageLinks.txt"))
NK(data,0.07)
results <- NK(data,0.07)
View(results)
results <- as.data.frame(results)
View(results)
NK(data,0.07)
results <- NK(data,0.07)
results
View(results)
NK$K_g
str(results)
results$K_g
View(results$K_g)
library(tidyverse)
?rowSums
results_2 <- as.data.frame(results$K_g) %>% rowSums()
View(results_2)
str(results_2)
class(results_2)
results_2 <- as.data.frame(results$K_g) %>% rowSums() %>% arrange(V1)
results_2 <- as.data.frame(results$K_g) %>% rowSums()
results_2
View(results_2)
results
NK <- function(A, gamma) {
G <- graph_from_adjacency_matrix(A)
# Calculamos el máximo grado de difusión posible
MIdg <- max(degree(G,mode="in"))
MOdg <- max(degree(G,mode="out"))
max_gamma <- 1/(min(MIdg,MOdg))
# Comprobamos que gamma no es excesivamente elevado
if(gamma > max_gamma) {
return(paste("Grado de difusión demasiado alto. El valor debe estar entre 0 y",
round(max_gamma,3)))
}
K_ <- t(A) %*% A
T_ <- A %*% t(A)
output = list()
output$K_g <- K_ %*% solve(diag(nrow(A)) - gamma*K_)
output$T_g <- T_ %*% solve(diag(nrow(A)) - gamma*T_)
return(output)
}
data <- as.matrix(read.table("webPageLinks.txt"))
MIdg <- max(degree(G,mode="in"))
MOdg <- max(degree(G,mode="out"))
NK <- function(A, gamma) {
G <- graph_from_adjacency_matrix(A)
# Calculamos el máximo grado de difusión posible
MIdg <- max(degree(G,mode="in"))
MOdg <- max(degree(G,mode="out"))
max_gamma <- 1/(min(MIdg,MOdg))
# Comprobamos que gamma no es excesivamente elevado
if(gamma > max_gamma) {
return(paste("Grado de difusión demasiado alto. El valor debe estar entre 0 y",
round(max_gamma,3)))
}
K_ <- t(A) %*% A
T_ <- A %*% t(A)
output = list()
output$K_g <- K_ %*% solve(diag(nrow(A)) - gamma*K_)
output$T_g <- T_ %*% solve(diag(nrow(A)) - gamma*T_)
output$max_gamma <- max_gamma
return(output)
}
data <- as.matrix(read.table("webPageLinks.txt"))
results <- NK(data,max_gamma)
data <- as.matrix(read.table("webPageLinks.txt"))
results <- NK(data,0.07)
results
results
results$K_g
results <- NK(data,results$max_gamma)
View(results)
View(results)
results$max_gamma
data <- as.matrix(read.table("webPageLinks.txt"))
results <- NK(data,0.07142857)
results_2 <- as.data.frame(results$K_g) %>% rowSums()
M <- data.matrix(data)
G <- graph_from_adjacency_matrix(M)
auth <- as.data.frame(authority.score(G)$vector)
View(auth)
auth <- as.data.frame(authority.score(G)$vector) %>% min_rank
View(auth)
results_2 <- as.data.frame(results$K_g) %>% rowSums() %>%min_rank
results_2 <- as.data.frame(results$K_g) %>% rowSums()
auth <- as.data.frame(authority.score(G)$vector)
View(auth)
View(results_2)
auth_k07 <- inner_join(results_2,auth)
auth <- as.vector(authority.score(G)$vector)
auth_k07 <- inner_join(results_2,auth)
auth <- as.data.frame(authority.score(G)$vector)
auth_k07 <- inner_join(as.vector(results_2),auth)
results_2 <- as.data.frame(results$K_g) %>% mutate(sums = rowSums())
results_2 <- as.data.frame(results$K_g) %>% as.data.frame(rowSums())
results_2 <- as.data.frame(results$K_g) %>% rowSums() %>% as.data.frame()
View(results_2)
str(results_2)
auth_k07 <- inner_join(results_2,auth)
auth <- auth %>% mutate(V=colnames(data), .before=`authority.score(G)$vector`)
results_2 <- results_2 %>% mutate(V=colnames(data), .before=.)
results_2 <- results_2 %>% mutate(V=colnames(data), .before='.')
View(results_2)
auth_k07 <- inner_join(results_2,auth)
View(auth_07)
View(auth_k07)
results_3 <- as.data.frame(results$K_g) %>% colSums() %>% as.data.frame()
results_3 <- results_3 %>% mutate(V=colnames(data), .before='.')
auth <- auth %>% mutate(V=colnames(data), .before=`authority.score(G)$vector`) %>% min_rank
results_3 <- results_3 %>% mutate(V=colnames(data), .before='.') %>% min_rank
auth_k07_2 <- inner_join(results_3,auth)
results_3 <- as.data.frame(results$K_g) %>% colSums() %>% as.data.frame()
results_3 <- results_3 %>% mutate(V=colnames(data), .before='.') %>% min_rank
auth_k07_2 <- inner_join(results_3,auth)
View(results_3)
results_3 <- as.data.frame(results$K_g) %>% colSums() %>% t() %>% as.data.frame()
results_3 <- results_3 %>% mutate(V=colnames(data), .before='.') %>% min_rank
auth_k07_2 <- inner_join(results_3,auth)
results_3 <- results_3 %>% mutate(V=colnames(data), .before='.') %>% min_rank
View(results_3)
results_3 <- results_3 %>% t() %>% mutate(V=colnames(data), .before='.') %>% min_rank
results_3 <- as.data.frame(results$K_g) %>% colSums() %>% t() %>% as.data.frame()
results_3 <- results_3 %>% t() %>% mutate(V=colnames(data), .before='.') %>% min_rank
results_3 <- as.data.frame(results$K_g) %>% colSums() %>% t() %>% as.data.frame()
View(results_3)
View(results_2)
results_3 <- as.data.frame(results$K_g) %>% colSums() %>% as.data.frame()
View(results_3)
results_3 <- as.data.frame(diag(results$K_g))
View(results_3)
save.image("C:/Users/Usuario/Desktop/trabajo.RData")
G=make_graph(c("n5","n1","n5","n2","n6","n2","n6","n3","n7","n3","n7","n4","n8","n3","n8","n4"),directed=TRUE)
plot(G)
C<-matrix(c(0,0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0,
1, 1, 0, 0, 0, 0, 0, 0,
0, 1, 1, 0, 0, 0, 0, 0,
0, 0, 1, 1, 0, 0, 0, 0,
0, 0, 1, 1, 0, 0, 0, 0),
nrow=8,ncol=8,
byrow=TRUE)
G=make_graph(C,directed=TRUE)
C <- as_adjacency_matrix(C)
G=make_graph(C,directed=TRUE)
K <- t(C) %*% C
K <- t(C) %*% C
tt <- C %*% t(C)
G=graph_from_adjacency_matrix(C,directed=TRUE)
G
G=graph_from_adjacency_matrix(C)
plot(G)
MIdg <- max(degree(G,mode="in"))
MOdg <- max(degree(G,mode="out"))
gamma <- 1/(min(MIdg,MOdg))
gamma <- 0.207
# K---------------------------------------------------------------------
Kgamma <- K %*% solve(diag(8) - gamma*K)
Kgamma_results = data.frame()
for (i in 1:nrow(Kgamma)){
Kgamma_newsum=sum(Kgamma[i,])
Kgamma_results=rbind(Kgamma_results,Kgamma_newsum)
rm(Kgamma_newsum)
}
Kgamma_results <- Kgamma_results %>%
mutate(V=c("n5","n1","n2","n6","n3","n7","n4","n8"), .before=X0)
Kgamma_results
Kgamma_results <- Kgamma_results %>%
mutate(V=c("n5","n1","n2","n6","n3","n7","n4","n8"), .before=X184.936707487713)
View(Kgamma_results)
auth <- auth %>% mutate(V=colnames(C), .before=`authority.score(G)$vector`)
auth <- as.data.frame(authority.score(G)$vector)
auth <- auth %>% mutate(V=colnames(C), .before=`authority.score(G)$vector`)
View(auth)
gamma <- 0
# K---------------------------------------------------------------------
Kgamma <- K %*% solve(diag(8) - gamma*K)
Kgamma_results = data.frame()
for (i in 1:nrow(Kgamma)){
Kgamma_newsum=sum(Kgamma[i,])
Kgamma_results=rbind(Kgamma_results,Kgamma_newsum)
rm(Kgamma_newsum)
}
Kgamma_results <- Kgamma_results %>%
mutate(V=c("n5","n1","n2","n6","n3","n7","n4","n8"), .before=X184.936707487713)
Kgamma_results
Kgamma_results <- Kgamma_results %>%
mutate(V=c("n5","n1","n2","n6","n3","n7","n4","n8"), .before=X2)
View(Kgamma_results)
NK <- function(A, gamma) {
G <- graph_from_adjacency_matrix(A)
# Calculamos el máximo grado de difusión posible
MIdg <- max(degree(G,mode="in"))
MOdg <- max(degree(G,mode="out"))
max_gamma <- 1/(min(MIdg,MOdg))
# Comprobamos que gamma no es excesivamente elevado
if(gamma > max_gamma) {
return(paste("Grado de difusión demasiado alto. El valor debe estar entre 0 y",
round(max_gamma,3)))
}
K_ <- t(A) %*% A
T_ <- A %*% t(A)
output = list()
output$K_g <- K_ %*% solve(diag(nrow(A)) - gamma*K_)
output$T_g <- T_ %*% solve(diag(nrow(A)) - gamma*T_)
return(output)
}
NK(C,0)
NK(C,0.207)
View(results_2)
results_2 <- as.data.frame(results$K_g) %>% rowSums() %>% as.data.frame()
data <- as.matrix(read.table("webPageLinks.txt"))
results <- NK(data,0.07142857)
NK <- function(A, gamma) {
G <- graph_from_adjacency_matrix(A)
# Calculamos el máximo grado de difusión posible
MIdg <- max(degree(G,mode="in"))
MOdg <- max(degree(G,mode="out"))
max_gamma <- 1/(min(MIdg,MOdg))
# Comprobamos que gamma no es excesivamente elevado
if(gamma > max_gamma) {
return(paste("Grado de difusión demasiado alto. El valor debe estar entre 0 y",
round(max_gamma,3)))
}
K_ <- t(A) %*% A
T_ <- A %*% t(A)
output = list()
output$K_g <- K_ %*% solve(diag(nrow(A)) - gamma*K_)
output$T_g <- T_ %*% solve(diag(nrow(A)) - gamma*T_)
return(output)
}
data <- as.matrix(read.table("webPageLinks.txt"))
results <- NK(data,0.07142857)
results_2 <- as.data.frame(results$K_g) %>% rowSums() %>% as.data.frame()
results_2 <- results_2 %>% mutate(V=colnames(data), .before='.')
View(results_2)
results_2 <- as.data.frame(results$K_g) %>% rowSums() %>% as.data.frame()
results_2 <- results_2 %>% mutate(V=colnames(data), .before='.')
results_2 <- as.data.frame(results$K_g) %>% rowSums() %>% as.data.frame()
results_2 <- results_2 %>% mutate(V=colnames(data), .before='.')
results_2 <- results_2 %>% mutate(V=colnames(data), .before='.')
View(results_2)
results_2 <- as.data.frame(results$K_g) %>% rowSums() %>% as.data.frame() %>%
mutate(V=colnames(data), .before='.')
View(results_2)
auth <- as.data.frame(authority.score(G)$vector) %>% mutate(V=colnames(data), .before=`authority.score(G)$vector`) %>% min_rank
G <- graph_from_adjacency_matrix(M)
M <- data.matrix(data)
G <- graph_from_adjacency_matrix(M)
auth <- as.data.frame(authority.score(G)$vector) %>% mutate(V=colnames(data), .before=`authority.score(G)$vector`) %>% min_rank
results_2 <- as.data.frame(results$K_g) %>% rowSums() %>% as.data.frame() %>%
mutate(V=colnames(data), .before='.') %>% min_rank
auth <- as.data.frame(authority.score(G)$vector) %>% mutate(V=colnames(data), .before=`authority.score(G)$vector`) %>% min_rank
auth_k07 <- inner_join(results_2,auth)
results_2 <- as.data.frame(results$K_g) %>% rowSums() %>% as.data.frame() %>%
mutate(V=colnames(data), .before='.')
auth <- as.data.frame(authority.score(G)$vector) %>% mutate(V=colnames(data), .before=`authority.score(G)$vector`)
auth_k07 <- inner_join(results_2,auth)
View(auth_k07)
results_2 <- as.data.frame(results$K_g) %>% rowSums() %>% as.data.frame() %>%
mutate(V=colnames(data), .before='.') %>% min_rank %>% as.data.frame()
auth <- as.data.frame(authority.score(G)$vector) %>% mutate(V=colnames(data), .before=`authority.score(G)$vector`) %>% min_rank %>% as.data.frame()
auth_k07 <- inner_join(results_2,auth)
View(auth_k07)
results_2 <- as.data.frame(results$K_g) %>% rowSums() %>% as.data.frame() %>%
mutate(V=colnames(data), .before='.')
auth <- as.data.frame(authority.score(G)$vector) %>% mutate(V=colnames(data), .before=`authority.score(G)$vector`)
View(auth_k07)
auth_k07 <- inner_join(results_2,auth)
View(auth_k07)
results_4 <- as.data.frame(results$K_g) %>% rowSums() %>% as.data.frame() %>%
min_rank %>% as.data.frame()
M <- data.matrix(data)
G <- graph_from_adjacency_matrix(M)
auth <- as.data.frame(authority.score(G)$vector) %>% min_rank %>% as.data.frame()
auth_k07_2 <- cbind(results_4,auth)
View(auth_k07_2)
auth <- as.data.frame(hub.score(G)$vector) %>% min_rank %>% as.data.frame()
auth_k07_2 <- cbind(results_4,auth)
cor(results_4,auth)
results_5 <- NK(data,0)
results_4 <- as.data.frame(results_5$K_g) %>% rowSums() %>% as.data.frame() %>%
min_rank %>% as.data.frame()
M <- data.matrix(data)
G <- graph_from_adjacency_matrix(M)
auth <- as.data.frame(authority.score(G)$vector) %>% min_rank %>% as.data.frame()
auth_k07_3 <- cbind(results_4,auth)
View(auth_k07_3)
cor(auth_k07_3,results_4)
cor(auth,results_4)
results <- NK(data,0.06)
results_2 <- as.data.frame(results$K_g) %>% rowSums() %>% as.data.frame() %>%
mutate(V=colnames(data), .before='.')
M <- data.matrix(data)
G <- graph_from_adjacency_matrix(M)
auth <- as.data.frame(authority.score(G)$vector) %>% mutate(V=colnames(data), .before=`authority.score(G)$vector`)
auth_k07 <- inner_join(results_2,auth) %>% mutate()
View(auth_k07)
View(auth_k07)
results_5 <- NK(data,0.6)
results_4 <- as.data.frame(results_5$K_g) %>% rowSums() %>% as.data.frame() %>%
min_rank %>% as.data.frame()
M <- data.matrix(data)
results_5 <- NK(data,0.6)
results_4 <- as.data.frame(results_5$K_g) %>% rowSums() %>% as.data.frame() %>%
min_rank %>% as.data.frame()
results_5 <- NK(data,0)
results_4 <- as.data.frame(results_5$K_g) %>% rowSums() %>% as.data.frame() %>%
min_rank %>% as.data.frame()
M <- data.matrix(data)
G <- graph_from_adjacency_matrix(M)
auth <- as.data.frame(authority.score(G)$vector) %>% min_rank %>% as.data.frame()
auth_k07_3 <- cbind(results_4,auth)
results_5 <- NK(data,0.06)
results_4 <- as.data.frame(results_5$K_g) %>% rowSums() %>% as.data.frame() %>%
min_rank %>% as.data.frame()
M <- data.matrix(data)
G <- graph_from_adjacency_matrix(M)
auth <- as.data.frame(authority.score(G)$vector) %>% min_rank %>% as.data.frame()
auth_k07_3 <- cbind(results_4,auth)
View(auth_k07_3)
authority.score(G)$vector
blah <- as.data.frame(authority.score(G)$vector)
View(blah)
results_6 <- as.data.frame(results_5$K_g) %>% rowSums()
View(results_6)
auth_k07_3
View(auth_k07_3)
corr(auth_k07_3)
cor(results_4,auth)
